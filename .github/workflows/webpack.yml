name: Build Extension

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment of release'
        type: environment
        default: Development
        required: true
      draft:
        description: 'Draft Release'
        required: true
        default: false
      prerelease:
        description: 'Pre Release'
        required: true
        default: true
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
env:
    UNINSTALL_URL: ${{vars.UNINSTALL_URL}}
    TRACKING_ID: ${{vars.TRACKING_ID}}
    OPTIONS_PAGE_URL: ${{vars.OPTIONS_PAGE_URL}}
    FUNCTION_URL: ${{vars.FUNCTION_URL}}
    VARIANT: ${{vars.VARIANT}}
    NAME: ${{vars.NAME}}

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: ${{inputs.environment}}
      url: ${{ fromJSON(steps.release.outputs.assets)[0].browser_download_url }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Setup Env
      uses: actions/setup-node@v3
      with:
         always-auth: true
         node-version: 16
         registry-url: https://npm.pkg.github.com
         scope: "@dhruv-techapps"
         cache: "npm"
         
    - run: |
        echo "NAME=${NAME//[^[:alnum:]]/_}" >>${GITHUB_ENV}
        echo "${NAME}"
        
    - name: Build Extension
      run: |
        npm install
        npx webpack --env name="${{vars.NAME}}" devtool="${{vars.DEV_TOOL}}" variant="${{vars.VARIANT}}"
        
    - name: Zip
      run: |
        mkdir -p build
        ls
        cd dist
        ls
        zip -r ../build/${NAME}.zip .
        
    - name: Set ${{vars.VARIANT}} Tag
      if: ${{inputs.draft !== true}}
      uses: rickstaa/action-create-tag@v1
      with:
        force_push_tag: true
        tag: "${{vars.VARIANT}}"
    - id: package
      uses: martinbeentjes/npm-get-version-action@main
    - name: Release
      id: release
      uses: softprops/action-gh-release@v1
      with:
        prerelease: ${{inputs.prerelease}}
        draft: ${{inputs.draft}}
        tag_name: ${{ steps.package.outputs.current-version}}
        generate_release_notes: true
        files: build/*
        fail_on_unmatched_files: true
